name: 构建 cf-auth (OpenWrt 24.10.2 x86_64)

on:
  push:
    tags: ['*']
  workflow_dispatch:
permissions:
  contents: write

env:
  RELEASE: 24.10.2
  TARGET: x86
  SUBTARGET: 64
  PKG_DIR_NAME: cf-auth

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 从 Tag 写入 PKG_VERSION
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG="${GITHUB_REF_NAME}"
          echo "使用 Tag 作为 PKG_VERSION: ${TAG}"
          sed -i "s/^PKG_VERSION:=.*/PKG_VERSION:=${TAG}/" packaging/openwrt/Makefile
          grep -n '^PKG_VERSION:=' packaging/openwrt/Makefile || true

      - name: 安装构建依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk \
            gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
            python3-setuptools rsync swig unzip zlib1g-dev file wget zstd

      - name: 下载并解压 OpenWrt SDK
        run: |
          set -eux
          BASE="https://downloads.openwrt.org/releases/${RELEASE}/targets/${TARGET}/${SUBTARGET}/"
          SDK_TARBALL=$(curl -fsSL "$BASE" | grep -o 'openwrt-sdk-[^"]*\.tar\.zst' | head -n1)
          mkdir -p _sdk
          curl -fsSL "${BASE}${SDK_TARBALL}" -o _sdk/sdk.tar.zst
          tar --zstd -xf _sdk/sdk.tar.zst -C _sdk
          SDK_DIR="$(find "$PWD/_sdk" -maxdepth 1 -type d -name 'openwrt-sdk-*' -print -quit)"
          echo "SDK_DIR=${SDK_DIR}" >> "$GITHUB_ENV"
          echo "已解压 SDK 到: ${SDK_DIR}"

      - name: 注入本地包源码
        run: |
          cd "$SDK_DIR"
          mkdir -p package/${PKG_DIR_NAME}
          rsync -a --delete "$GITHUB_WORKSPACE/" "package/${PKG_DIR_NAME}/src/" \
            --exclude '.git' --exclude '.github' --exclude '_sdk' --exclude 'out'
          cp -f "package/${PKG_DIR_NAME}/src/packaging/openwrt/Makefile" "package/${PKG_DIR_NAME}/Makefile"

      - name: 更新 feeds 并安装 golang 工具链
        run: |
          cd "$SDK_DIR"
          ./scripts/feeds update packages luci
          ./scripts/feeds install golang luci-base

      - name: 生成默认配置
        run: |
          cd "$SDK_DIR"
          make defconfig

      - name: 编译 cf-auth 包
        run: |
          cd "$SDK_DIR"
          make package/${PKG_DIR_NAME}/clean V=s || true
          make package/${PKG_DIR_NAME}/compile -j"$(nproc)" V=sc

      - name: 收集构建产物
        run: |
          cd "$SDK_DIR"
          mkdir -p "$GITHUB_WORKSPACE/out"
          find bin/packages -type f -name "*${PKG_DIR_NAME}*ipk" -print -exec cp -f {} "$GITHUB_WORKSPACE/out/" \;
          ls -l "$GITHUB_WORKSPACE/out"

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: cf-auth-ipks-${{ github.ref_name || 'manual' }}-x86_64
          path: out/
          if-no-files-found: error

      - name: 发布到 GitHub Releases
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          files: out/*.ipk